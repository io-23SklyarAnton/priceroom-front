9492f1ef1124081c0fa29d5d8370f2bc
"use strict";

var _excluded = ["reactStrictMode"];
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.configure = configure;
exports.getConfig = getConfig;
var _dom = require("@testing-library/dom");
var configForRTL = {
  reactStrictMode: false
};
function getConfig() {
  return _objectSpread(_objectSpread({}, (0, _dom.getConfig)()), configForRTL);
}
function configure(newConfig) {
  if (typeof newConfig === 'function') {
    // Pass the existing config out to the provided function
    // and accept a delta in return
    newConfig = newConfig(getConfig());
  }
  var _newConfig = newConfig,
    reactStrictMode = _newConfig.reactStrictMode,
    configForDTL = _objectWithoutProperties(_newConfig, _excluded);
  (0, _dom.configure)(configForDTL);
  configForRTL = _objectSpread(_objectSpread({}, configForRTL), {}, {
    reactStrictMode: reactStrictMode
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhjbHVkZWQiLCJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJlIiwidCIsInIiLCJpIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJPYmplY3QiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJzIiwibGVuZ3RoIiwiaW5jbHVkZXMiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImNhbGwiLCJuIiwiaGFzT3duUHJvcGVydHkiLCJvd25LZXlzIiwia2V5cyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJfdG9Qcm9wZXJ0eUtleSIsInZhbHVlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfdG9QcmltaXRpdmUiLCJ0b1ByaW1pdGl2ZSIsIlR5cGVFcnJvciIsIlN0cmluZyIsIk51bWJlciIsImV4cG9ydHMiLCJjb25maWd1cmUiLCJnZXRDb25maWciLCJfZG9tIiwicmVxdWlyZSIsImNvbmZpZ0ZvclJUTCIsInJlYWN0U3RyaWN0TW9kZSIsIm5ld0NvbmZpZyIsIl9uZXdDb25maWciLCJjb25maWdGb3JEVEwiXSwic291cmNlcyI6WyJjb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNvbmZpZ3VyZSA9IGNvbmZpZ3VyZTtcbmV4cG9ydHMuZ2V0Q29uZmlnID0gZ2V0Q29uZmlnO1xudmFyIF9kb20gPSByZXF1aXJlKFwiQHRlc3RpbmctbGlicmFyeS9kb21cIik7XG5sZXQgY29uZmlnRm9yUlRMID0ge1xuICByZWFjdFN0cmljdE1vZGU6IGZhbHNlXG59O1xuZnVuY3Rpb24gZ2V0Q29uZmlnKCkge1xuICByZXR1cm4ge1xuICAgIC4uLigwLCBfZG9tLmdldENvbmZpZykoKSxcbiAgICAuLi5jb25maWdGb3JSVExcbiAgfTtcbn1cbmZ1bmN0aW9uIGNvbmZpZ3VyZShuZXdDb25maWcpIHtcbiAgaWYgKHR5cGVvZiBuZXdDb25maWcgPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBQYXNzIHRoZSBleGlzdGluZyBjb25maWcgb3V0IHRvIHRoZSBwcm92aWRlZCBmdW5jdGlvblxuICAgIC8vIGFuZCBhY2NlcHQgYSBkZWx0YSBpbiByZXR1cm5cbiAgICBuZXdDb25maWcgPSBuZXdDb25maWcoZ2V0Q29uZmlnKCkpO1xuICB9XG4gIGNvbnN0IHtcbiAgICByZWFjdFN0cmljdE1vZGUsXG4gICAgLi4uY29uZmlnRm9yRFRMXG4gIH0gPSBuZXdDb25maWc7XG4gICgwLCBfZG9tLmNvbmZpZ3VyZSkoY29uZmlnRm9yRFRMKTtcbiAgY29uZmlnRm9yUlRMID0ge1xuICAgIC4uLmNvbmZpZ0ZvclJUTCxcbiAgICByZWFjdFN0cmljdE1vZGVcbiAgfTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQUMsSUFBQUEsU0FBQTtBQUFBLFNBQUFDLFFBQUFDLENBQUEsc0NBQUFELE9BQUEsd0JBQUFFLE1BQUEsdUJBQUFBLE1BQUEsQ0FBQUMsUUFBQSxhQUFBRixDQUFBLGtCQUFBQSxDQUFBLGdCQUFBQSxDQUFBLFdBQUFBLENBQUEseUJBQUFDLE1BQUEsSUFBQUQsQ0FBQSxDQUFBRyxXQUFBLEtBQUFGLE1BQUEsSUFBQUQsQ0FBQSxLQUFBQyxNQUFBLENBQUFHLFNBQUEscUJBQUFKLENBQUEsS0FBQUQsT0FBQSxDQUFBQyxDQUFBO0FBQUEsU0FBQUsseUJBQUFDLENBQUEsRUFB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