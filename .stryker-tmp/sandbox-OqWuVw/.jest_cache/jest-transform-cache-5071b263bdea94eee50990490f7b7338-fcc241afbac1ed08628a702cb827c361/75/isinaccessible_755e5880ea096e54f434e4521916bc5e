dcb2fa189109c1327b93f4002349d3cb
"use strict";

exports.__esModule = true;
exports.isInaccessible = isInaccessible;
exports.isSubtreeInaccessible = isSubtreeInaccessible;
/**
 * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion
 * which should only be used for elements with a non-presentational role i.e.
 * `role="none"` and `role="presentation"` will not be excluded.
 *
 * Implements aria-hidden semantics (i.e. parent overrides child)
 * Ignores "Child Presentational: True" characteristics
 *
 * @param element
 * @param options
 * @returns {boolean} true if excluded, otherwise false
 */
function isInaccessible(element) {
  var _element$ownerDocumen;
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$getComputedS = options.getComputedStyle,
    getComputedStyle = _options$getComputedS === void 0 ? (_element$ownerDocumen = element.ownerDocument.defaultView) === null || _element$ownerDocumen === void 0 ? void 0 : _element$ownerDocumen.getComputedStyle : _options$getComputedS,
    _options$isSubtreeIna = options.isSubtreeInaccessible,
    isSubtreeInaccessibleImpl = _options$isSubtreeIna === void 0 ? isSubtreeInaccessible : _options$isSubtreeIna;
  if (typeof getComputedStyle !== "function") {
    throw new TypeError("Owner document of the element needs to have an associated window.");
  }
  // since visibility is inherited we can exit early
  if (getComputedStyle(element).visibility === "hidden") {
    return true;
  }
  var currentElement = element;
  while (currentElement) {
    if (isSubtreeInaccessibleImpl(currentElement, {
      getComputedStyle: getComputedStyle
    })) {
      return true;
    }
    currentElement = currentElement.parentElement;
  }
  return false;
}
/**
 *
 * @param element
 * @param options
 * @returns {boolean} - `true` if every child of the element is inaccessible
 */
function isSubtreeInaccessible(element) {
  var _element$ownerDocumen2;
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$getComputedS2 = options.getComputedStyle,
    getComputedStyle = _options$getComputedS2 === void 0 ? (_element$ownerDocumen2 = element.ownerDocument.defaultView) === null || _element$ownerDocumen2 === void 0 ? void 0 : _element$ownerDocumen2.getComputedStyle : _options$getComputedS2;
  if (typeof getComputedStyle !== "function") {
    throw new TypeError("Owner document of the element needs to have an associated window.");
  }
  if (element.hidden === true) {
    return true;
  }
  if (element.getAttribute("aria-hidden") === "true") {
    return true;
  }
  if (getComputedStyle(element).display === "none") {
    return true;
  }
  return false;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpc0luYWNjZXNzaWJsZSIsImVsZW1lbnQiLCJfZWxlbWVudCRvd25lckRvY3VtZW4iLCJvcHRpb25zIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiX29wdGlvbnMkZ2V0Q29tcHV0ZWRTIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsIm93bmVyRG9jdW1lbnQiLCJkZWZhdWx0VmlldyIsIl9vcHRpb25zJGlzU3VidHJlZUluYSIsImlzU3VidHJlZUluYWNjZXNzaWJsZSIsImlzU3VidHJlZUluYWNjZXNzaWJsZUltcGwiLCJUeXBlRXJyb3IiLCJ2aXNpYmlsaXR5IiwiY3VycmVudEVsZW1lbnQiLCJwYXJlbnRFbGVtZW50IiwiX2VsZW1lbnQkb3duZXJEb2N1bWVuMiIsIl9vcHRpb25zJGdldENvbXB1dGVkUzIiLCJoaWRkZW4iLCJnZXRBdHRyaWJ1dGUiLCJkaXNwbGF5Il0sInNvdXJjZXMiOlsiLi4vc291cmNlcy9pcy1pbmFjY2Vzc2libGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBJc0luYWNjZXNzaWJsZU9wdGlvbnMge1xuXHRnZXRDb21wdXRlZFN0eWxlPzogdHlwZW9mIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlO1xuXHQvKipcblx0ICogQ2FuIGJlIHVzZWQgdG8gcmV0dXJuIGNhY2hlZCByZXN1bHRzIGZyb20gcHJldmlvdXMgaXNTdWJ0cmVlSW5hY2Nlc3NpYmxlIGNhbGxzLlxuXHQgKi9cblx0aXNTdWJ0cmVlSW5hY2Nlc3NpYmxlPzogKGVsZW1lbnQ6IEVsZW1lbnQpID0+IGJvb2xlYW47XG59XG5cbi8qKlxuICogUGFydGlhbCBpbXBsZW1lbnRhdGlvbiBodHRwczovL3d3dy53My5vcmcvVFIvd2FpLWFyaWEtMS4yLyN0cmVlX2V4Y2x1c2lvblxuICogd2hpY2ggc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgZWxlbWVudHMgd2l0aCBhIG5vbi1wcmVzZW50YXRpb25hbCByb2xlIGkuZS5cbiAqIGByb2xlPVwibm9uZVwiYCBhbmQgYHJvbGU9XCJwcmVzZW50YXRpb25cImAgd2lsbCBub3QgYmUgZXhjbHVkZWQuXG4gKlxuICogSW1wbGVtZW50cyBhcmlhLWhpZGRlbiBzZW1hbnRpY3MgKGkuZS4gcGFyZW50IG92ZXJyaWRlcyBjaGlsZClcbiAqIElnbm9yZXMgXCJDaGlsZCBQcmVzZW50YXRpb25hbDogVHJ1ZVwiIGNoYXJhY3RlcmlzdGljc1xuICpcbiAqIEBwYXJhbSBlbGVtZW50XG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHJldHVybnMge2Jvb2xlYW59IHRydWUgaWYgZXhjbHVkZWQsIG90aGVyd2lzZSBmYWxzZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNJbmFjY2Vzc2libGUoXG5cdGVsZW1lbnQ6IEVsZW1lbnQsXG5cdG9wdGlvbnM6IElzSW5hY2Nlc3NpYmxlT3B0aW9ucyA9IHt9XG4pOiBib29sZWFuIHtcblx0Y29uc3Qge1xuXHRcdGdldENvbXB1dGVkU3R5bGUgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc/LmdldENvbXB1dGVkU3R5bGUsXG5cdFx0aXNTdWJ0cmVlSW5hY2Nlc3NpYmxlOiBpc1N1YnRyZWVJbmFjY2Vzc2libGVJbXBsID0gaXNTdWJ0cmVlSW5hY2Nlc3NpYmxlLFxuXHR9ID0gb3B0aW9ucztcblx0aWYgKHR5cGVvZiBnZXRDb21wdXRlZFN0eWxlICE9PSBcImZ1bmN0aW9uXCIpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKFxuXHRcdFx0XCJPd25lciBkb2N1bWVudCBvZiB0aGUgZWxlbWVudCBuZWVkcyB0byBoYXZlIGFuIGFzc29jaWF0ZWQgd2luZG93LlwiXG5cdFx0KTtcblx0fVxuXHQvLyBzaW5jZSB2aXNpYmlsaXR5IGlzIGluaGVyaXRlZCB3ZSBjYW4gZXhpdCBlYXJseVxuXHRpZiAoZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS52aXNpYmlsaXR5ID09PSBcImhpZGRlblwiKSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRsZXQgY3VycmVudEVsZW1lbnQ6IEVsZW1lbnQgfCBudWxsID0gZWxlbWVudDtcblx0d2hpbGUgKGN1cnJlbnRFbGVtZW50KSB7XG5cdFx0aWYgKGlzU3VidHJlZUluYWNjZXNzaWJsZUltcGwoY3VycmVudEVsZW1lbnQsIHsgZ2V0Q29tcHV0ZWRTdHlsZSB9KSkge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0Y3VycmVudEVsZW1lbnQgPSBjdXJyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50O1xuXHR9XG5cblx0cmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElzU3VidHJlZUluYWNjZXNzaWJsZU9wdGlvbnMge1xuXHRnZXRDb21wdXRlZFN0eWxlPzogdHlwZW9mIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlO1xufVxuXG4vKipcbiAqXG4gKiBAcGFyYW0gZWxlbWVudFxuICogQHBhcmFtIG9wdGlvbnNcbiAqIEByZXR1cm5zIHtib29sZWFufSAtIGB0cnVlYCBpZiBldmVyeSBjaGlsZCBvZiB0aGUgZWxlbWVudCBpcyBpbmFjY2Vzc2libGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzU3VidHJlZUluYWNjZXNzaWJsZShcblx0ZWxlbWVudDogRWxlbWVudCxcblx0b3B0aW9uczogSXNTdWJ0cmVlSW5hY2Nlc3NpYmxlT3B0aW9ucyA9IHt9XG4pOiBib29sZWFuIHtcblx0Y29uc3Qge1xuXHRcdGdldENvbXB1dGVkU3R5bGUgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc/LmdldENvbXB1dGVkU3R5bGUsXG5cdH0gPSBvcHRpb25zO1xuXHRpZiAodHlwZW9mIGdldENvbXB1dGVkU3R5bGUgIT09IFwiZnVuY3Rpb25cIikge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoXG5cdFx0XHRcIk93bmVyIGRvY3VtZW50IG9mIHRoZSBlbGVtZW50IG5lZWRzIHRvIGhhdmUgYW4gYXNzb2NpYXRlZCB3aW5kb3cuXCJcblx0XHQpO1xuXHR9XG5cblx0aWYgKChlbGVtZW50IGFzIEhUTUxFbGVtZW50KS5oaWRkZW4gPT09IHRydWUpIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdGlmIChlbGVtZW50LmdldEF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIpID09PSBcInRydWVcIikge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0aWYgKGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkuZGlzcGxheSA9PT0gXCJub25lXCIpIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdHJldHVybiBmYWxzZTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQSxjQUFjQSxDQUM3QkMsT0FBZ0IsRUFFTjtFQUFBLElBQUFDLHFCQUFBO0VBQUEsSUFEVkMsT0FBOEIsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUcsQ0FBQyxDQUFDO0VBRW5DLElBQUFHLHFCQUFBLEdBR0lKLE9BQU8sQ0FGVkssZ0JBQWdCO0lBQWhCQSxnQkFBZ0IsR0FBQUQscUJBQUEsZUFBQUwscUJBQUEsR0FBR0QsT0FBTyxDQUFDUSxhQUFhLENBQUNDLFdBQVcsY0FBQVIscUJBQUEsdUJBQWpDQSxxQkFBQSxDQUFtQ00sZ0JBQWdCLEdBQUFELHFCQUFBO0lBQUFJLHFCQUFBLEdBRW5FUixPQUFPLENBRFZTLHFCQUFxQjtJQUFFQyx5QkFBeUIsR0FBQUYscUJBQUEsY0FBR0MscUJBQXFCLEdBQUFELHFCQUFBO0VBRXpFLElBQUksT0FBT0gsZ0JBQWdCLEtBQUssVUFBVSxFQUFFO0lBQzNDLE1BQU0sSUFBSU0sU0FBUyxDQUNsQixtRUFBbUUsQ0FDbkU7RUFDRjtFQUNBO0VBQ0EsSUFBSU4sZ0JBQWdCLENBQUNQLE9BQU8sQ0FBQyxDQUFDYyxVQUFVLEtBQUssUUFBUSxFQUFFO0lBQ3RELE9BQU8sSUFBSTtFQUNaO0VBRUEsSUFBSUMsY0FBOEIsR0FBR2YsT0FBTztFQUM1QyxPQUFPZSxjQUFjLEVBQUU7SUFDdEIsSUFBSUgseUJBQXlCLENBQUNHLGNBQWMsRUFBRTtNQUFFUixnQkFBZ0IsRUFBaEJBO0lBQWlCLENBQUMsQ0FBQyxFQUFFO01BQ3BFLE9BQU8sSUFBSTtJQUNaO0lBRUFRLGNBQWMsR0FBR0EsY0FBYyxDQUFDQyxhQUFhO0VBQzlDO0VBRUEsT0FBTyxLQUFLO0FBQ2I7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTTCxxQkFBcUJBLENBQ3BDWCxPQUFnQixFQUVOO0VBQUEsSUFBQWlCLHNCQUFBO0VBQUEsSUFEVmYsT0FBcUMsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUcsQ0FBQyxDQUFDO0VBRTFDLElBQUFlLHNCQUFBLEdBRUloQixPQUFPLENBRFZLLGdCQUFnQjtJQUFoQkEsZ0JBQWdCLEdBQUFXLHNCQUFBLGVBQUFELHNCQUFBLEdBQUdqQixPQUFPLENBQUNRLGFBQWEsQ0FBQ0MsV0FBVyxjQUFBUSxzQkFBQSx1QkFBakNBLHNCQUFBLENBQW1DVixnQkFBZ0IsR0FBQVcsc0JBQUE7RUFFdkUsSUFBSSxPQUFPWCxnQkFBZ0IsS0FBSyxVQUFVLEVBQUU7SUFDM0MsTUFBTSxJQUFJTSxTQUFTLENBQ2xCLG1FQUFtRSxDQUNuRTtFQUNGO0VBRUEsSUFBS2IsT0FBTyxDQUFpQm1CLE1BQU0sS0FBSyxJQUFJLEVBQUU7SUFDN0MsT0FBTyxJQUFJO0VBQ1o7RUFFQSxJQUFJbkIsT0FBTyxDQUFDb0IsWUFBWSxDQUFDLGFBQWEsQ0FBQyxLQUFLLE1BQU0sRUFBRTtJQUNuRCxPQUFPLElBQUk7RUFDWjtFQUVBLElBQUliLGdCQUFnQixDQUFDUCxPQUFPLENBQUMsQ0FBQ3FCLE9BQU8sS0FBSyxNQUFNLEVBQUU7SUFDakQsT0FBTyxJQUFJO0VBQ1o7RUFFQSxPQUFPLEtBQUs7QUFDYiIsImlnbm9yZUxpc3QiOltdfQ==