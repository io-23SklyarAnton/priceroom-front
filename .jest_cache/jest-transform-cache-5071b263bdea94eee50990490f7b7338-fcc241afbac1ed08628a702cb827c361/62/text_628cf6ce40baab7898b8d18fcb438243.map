{"version":3,"names":["_slicedToArray","r","e","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","l","t","Symbol","iterator","n","i","u","a","f","o","call","next","Object","done","push","value","length","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","slice","constructor","name","from","test","defineProperty","exports","queryByText","queryAllByText","getByText","getAllByText","findByText","findAllByText","_queryHelpers","require","_helpers","_allUtils","container","text","_ref","arguments","undefined","_ref$selector","selector","_ref$exact","exact","collapseWhitespace","trim","_ref$ignore","ignore","getConfig","defaultIgnore","normalizer","checkContainerType","matcher","matches","fuzzyMatches","matchNormalizer","makeNormalizer","baseArray","concat","querySelectorAll","filter","node","getNodeText","getMultipleError","c","getMissingError","options","normalizedText","isNormalizedDifferent","isCustomSelector","queryAllByTextWithSuggestions","wrapAllByQueryWithSuggestion","_ref2","buildQueries","_ref3"],"sources":["text.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByText = exports.queryAllByText = exports.getByText = exports.getAllByText = exports.findByText = exports.findAllByText = void 0;\nvar _queryHelpers = require(\"../query-helpers\");\nvar _helpers = require(\"../helpers\");\nvar _allUtils = require(\"./all-utils\");\nconst queryAllByText = (container, text, {\n  selector = '*',\n  exact = true,\n  collapseWhitespace,\n  trim,\n  ignore = (0, _allUtils.getConfig)().defaultIgnore,\n  normalizer\n} = {}) => {\n  (0, _helpers.checkContainerType)(container);\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  let baseArray = [];\n  if (typeof container.matches === 'function' && container.matches(selector)) {\n    baseArray = [container];\n  }\n  return [...baseArray, ...Array.from(container.querySelectorAll(selector))]\n  // TODO: `matches` according lib.dom.d.ts can get only `string` but according our code it can handle also boolean :)\n  .filter(node => !ignore || !node.matches(ignore)).filter(node => matcher((0, _allUtils.getNodeText)(node), node, text, matchNormalizer));\n};\nconst getMultipleError = (c, text) => `Found multiple elements with the text: ${text}`;\nconst getMissingError = (c, text, options = {}) => {\n  const {\n    collapseWhitespace,\n    trim,\n    normalizer,\n    selector\n  } = options;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  const normalizedText = matchNormalizer(text.toString());\n  const isNormalizedDifferent = normalizedText !== text.toString();\n  const isCustomSelector = (selector ?? '*') !== '*';\n  return `Unable to find an element with the text: ${isNormalizedDifferent ? `${normalizedText} (normalized from '${text}')` : text}${isCustomSelector ? `, which matches selector '${selector}'` : ''}. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.`;\n};\nconst queryAllByTextWithSuggestions = exports.queryAllByText = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByText, queryAllByText.name, 'queryAll');\nconst [queryByText, getAllByText, getByText, findAllByText, findByText] = (0, _allUtils.buildQueries)(queryAllByText, getMultipleError, getMissingError);\nexports.findByText = findByText;\nexports.findAllByText = findAllByText;\nexports.getByText = getByText;\nexports.getAllByText = getAllByText;\nexports.queryByText = queryByText;"],"mappings":"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","ignoreList":[]}