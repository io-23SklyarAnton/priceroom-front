2c55d21ea4b1562f56d364e67786b885
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.test = exports.serialize = exports["default"] = void 0;
var _collections = require('../collections');
var global = function () {
  if (typeof globalThis !== 'undefined') {
    return globalThis;
  } else if (typeof global !== 'undefined') {
    return global;
  } else if (typeof self !== 'undefined') {
    return self;
  } else if (typeof window !== 'undefined') {
    return window;
  } else {
    return Function('return this')();
  }
}();
var _Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;
var asymmetricMatcher = typeof _Symbol === 'function' && _Symbol["for"] ? _Symbol["for"]('jest.asymmetricMatcher') : 0x1357a5;
var SPACE = ' ';
var serialize = function serialize(val, config, indentation, depth, refs, printer) {
  var stringedValue = val.toString();
  if (stringedValue === 'ArrayContaining' || stringedValue === 'ArrayNotContaining') {
    if (++depth > config.maxDepth) {
      return '[' + stringedValue + ']';
    }
    return stringedValue + SPACE + '[' + (0, _collections.printListItems)(val.sample, config, indentation, depth, refs, printer) + ']';
  }
  if (stringedValue === 'ObjectContaining' || stringedValue === 'ObjectNotContaining') {
    if (++depth > config.maxDepth) {
      return '[' + stringedValue + ']';
    }
    return stringedValue + SPACE + '{' + (0, _collections.printObjectProperties)(val.sample, config, indentation, depth, refs, printer) + '}';
  }
  if (stringedValue === 'StringMatching' || stringedValue === 'StringNotMatching') {
    return stringedValue + SPACE + printer(val.sample, config, indentation, depth, refs);
  }
  if (stringedValue === 'StringContaining' || stringedValue === 'StringNotContaining') {
    return stringedValue + SPACE + printer(val.sample, config, indentation, depth, refs);
  }
  return val.toAsymmetricMatcher();
};
exports.serialize = serialize;
var test = function test(val) {
  return val && val.$$typeof === asymmetricMatcher;
};
exports.test = test;
var plugin = {
  serialize: serialize,
  test: test
};
var _default = plugin;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRlc3QiLCJzZXJpYWxpemUiLCJfY29sbGVjdGlvbnMiLCJyZXF1aXJlIiwiZ2xvYmFsIiwiZ2xvYmFsVGhpcyIsInNlbGYiLCJ3aW5kb3ciLCJGdW5jdGlvbiIsIlN5bWJvbCIsImFzeW1tZXRyaWNNYXRjaGVyIiwiU1BBQ0UiLCJ2YWwiLCJjb25maWciLCJpbmRlbnRhdGlvbiIsImRlcHRoIiwicmVmcyIsInByaW50ZXIiLCJzdHJpbmdlZFZhbHVlIiwidG9TdHJpbmciLCJtYXhEZXB0aCIsInByaW50TGlzdEl0ZW1zIiwic2FtcGxlIiwicHJpbnRPYmplY3RQcm9wZXJ0aWVzIiwidG9Bc3ltbWV0cmljTWF0Y2hlciIsIiQkdHlwZW9mIiwicGx1Z2luIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJBc3ltbWV0cmljTWF0Y2hlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy50ZXN0ID0gZXhwb3J0cy5zZXJpYWxpemUgPSBleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfY29sbGVjdGlvbnMgPSByZXF1aXJlKCcuLi9jb2xsZWN0aW9ucycpO1xuXG52YXIgZ2xvYmFsID0gKGZ1bmN0aW9uICgpIHtcbiAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBnbG9iYWxUaGlzO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGdsb2JhbDtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gc2VsZjtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiB3aW5kb3c7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG4gIH1cbn0pKCk7XG5cbnZhciBTeW1ib2wgPSBnbG9iYWxbJ2plc3Qtc3ltYm9sLWRvLW5vdC10b3VjaCddIHx8IGdsb2JhbC5TeW1ib2w7XG5jb25zdCBhc3ltbWV0cmljTWF0Y2hlciA9XG4gIHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLmZvclxuICAgID8gU3ltYm9sLmZvcignamVzdC5hc3ltbWV0cmljTWF0Y2hlcicpXG4gICAgOiAweDEzNTdhNTtcbmNvbnN0IFNQQUNFID0gJyAnO1xuXG5jb25zdCBzZXJpYWxpemUgPSAodmFsLCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcywgcHJpbnRlcikgPT4ge1xuICBjb25zdCBzdHJpbmdlZFZhbHVlID0gdmFsLnRvU3RyaW5nKCk7XG5cbiAgaWYgKFxuICAgIHN0cmluZ2VkVmFsdWUgPT09ICdBcnJheUNvbnRhaW5pbmcnIHx8XG4gICAgc3RyaW5nZWRWYWx1ZSA9PT0gJ0FycmF5Tm90Q29udGFpbmluZydcbiAgKSB7XG4gICAgaWYgKCsrZGVwdGggPiBjb25maWcubWF4RGVwdGgpIHtcbiAgICAgIHJldHVybiAnWycgKyBzdHJpbmdlZFZhbHVlICsgJ10nO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICBzdHJpbmdlZFZhbHVlICtcbiAgICAgIFNQQUNFICtcbiAgICAgICdbJyArXG4gICAgICAoMCwgX2NvbGxlY3Rpb25zLnByaW50TGlzdEl0ZW1zKShcbiAgICAgICAgdmFsLnNhbXBsZSxcbiAgICAgICAgY29uZmlnLFxuICAgICAgICBpbmRlbnRhdGlvbixcbiAgICAgICAgZGVwdGgsXG4gICAgICAgIHJlZnMsXG4gICAgICAgIHByaW50ZXJcbiAgICAgICkgK1xuICAgICAgJ10nXG4gICAgKTtcbiAgfVxuXG4gIGlmIChcbiAgICBzdHJpbmdlZFZhbHVlID09PSAnT2JqZWN0Q29udGFpbmluZycgfHxcbiAgICBzdHJpbmdlZFZhbHVlID09PSAnT2JqZWN0Tm90Q29udGFpbmluZydcbiAgKSB7XG4gICAgaWYgKCsrZGVwdGggPiBjb25maWcubWF4RGVwdGgpIHtcbiAgICAgIHJldHVybiAnWycgKyBzdHJpbmdlZFZhbHVlICsgJ10nO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICBzdHJpbmdlZFZhbHVlICtcbiAgICAgIFNQQUNFICtcbiAgICAgICd7JyArXG4gICAgICAoMCwgX2NvbGxlY3Rpb25zLnByaW50T2JqZWN0UHJvcGVydGllcykoXG4gICAgICAgIHZhbC5zYW1wbGUsXG4gICAgICAgIGNvbmZpZyxcbiAgICAgICAgaW5kZW50YXRpb24sXG4gICAgICAgIGRlcHRoLFxuICAgICAgICByZWZzLFxuICAgICAgICBwcmludGVyXG4gICAgICApICtcbiAgICAgICd9J1xuICAgICk7XG4gIH1cblxuICBpZiAoXG4gICAgc3RyaW5nZWRWYWx1ZSA9PT0gJ1N0cmluZ01hdGNoaW5nJyB8fFxuICAgIHN0cmluZ2VkVmFsdWUgPT09ICdTdHJpbmdOb3RNYXRjaGluZydcbiAgKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHN0cmluZ2VkVmFsdWUgK1xuICAgICAgU1BBQ0UgK1xuICAgICAgcHJpbnRlcih2YWwuc2FtcGxlLCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcylcbiAgICApO1xuICB9XG5cbiAgaWYgKFxuICAgIHN0cmluZ2VkVmFsdWUgPT09ICdTdHJpbmdDb250YWluaW5nJyB8fFxuICAgIHN0cmluZ2VkVmFsdWUgPT09ICdTdHJpbmdOb3RDb250YWluaW5nJ1xuICApIHtcbiAgICByZXR1cm4gKFxuICAgICAgc3RyaW5nZWRWYWx1ZSArXG4gICAgICBTUEFDRSArXG4gICAgICBwcmludGVyKHZhbC5zYW1wbGUsIGNvbmZpZywgaW5kZW50YXRpb24sIGRlcHRoLCByZWZzKVxuICAgICk7XG4gIH1cblxuICByZXR1cm4gdmFsLnRvQXN5bW1ldHJpY01hdGNoZXIoKTtcbn07XG5cbmV4cG9ydHMuc2VyaWFsaXplID0gc2VyaWFsaXplO1xuXG5jb25zdCB0ZXN0ID0gdmFsID0+IHZhbCAmJiB2YWwuJCR0eXBlb2YgPT09IGFzeW1tZXRyaWNNYXRjaGVyO1xuXG5leHBvcnRzLnRlc3QgPSB0ZXN0O1xuY29uc3QgcGx1Z2luID0ge1xuICBzZXJpYWxpemUsXG4gIHRlc3Rcbn07XG52YXIgX2RlZmF1bHQgPSBwbHVnaW47XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFDM0NDLEtBQUssRUFBRTtBQUNULENBQUMsQ0FBQztBQUNGRCxPQUFPLENBQUNFLElBQUksR0FBR0YsT0FBTyxDQUFDRyxTQUFTLEdBQUdILE9BQU8sV0FBUSxHQUFHLEtBQUssQ0FBQztBQUUzRCxJQUFJSSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztBQUU1QyxJQUFJQyxNQUFNLEdBQUksWUFBWTtFQUN4QixJQUFJLE9BQU9DLFVBQVUsS0FBSyxXQUFXLEVBQUU7SUFDckMsT0FBT0EsVUFBVTtFQUNuQixDQUFDLE1BQU0sSUFBSSxPQUFPRCxNQUFNLEtBQUssV0FBVyxFQUFFO0lBQ3hDLE9BQU9BLE1BQU07RUFDZixDQUFDLE1BQU0sSUFBSSxPQUFPRSxJQUFJLEtBQUssV0FBVyxFQUFFO0lBQ3RDLE9BQU9BLElBQUk7RUFDYixDQUFDLE1BQU0sSUFBSSxPQUFPQyxNQUFNLEtBQUssV0FBVyxFQUFFO0lBQ3hDLE9BQU9BLE1BQU07RUFDZixDQUFDLE1BQU07SUFDTCxPQUFPQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztFQUNsQztBQUNGLENBQUMsQ0FBRSxDQUFDO0FBRUosSUFBSUMsT0FBTSxHQUFHTCxNQUFNLENBQUMsMEJBQTBCLENBQUMsSUFBSUEsTUFBTSxDQUFDSyxN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