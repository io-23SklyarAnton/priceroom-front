999cedba75acba2af6688bc11b6b7e36
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.test = exports.serialize = exports["default"] = void 0;
var _ansiRegex = _interopRequireDefault(require('ansi-regex'));
var _ansiStyles = _interopRequireDefault(require('ansi-styles'));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var toHumanReadableAnsi = function toHumanReadableAnsi(text) {
  return text.replace((0, _ansiRegex["default"])(), function (match) {
    switch (match) {
      case _ansiStyles["default"].red.close:
      case _ansiStyles["default"].green.close:
      case _ansiStyles["default"].cyan.close:
      case _ansiStyles["default"].gray.close:
      case _ansiStyles["default"].white.close:
      case _ansiStyles["default"].yellow.close:
      case _ansiStyles["default"].bgRed.close:
      case _ansiStyles["default"].bgGreen.close:
      case _ansiStyles["default"].bgYellow.close:
      case _ansiStyles["default"].inverse.close:
      case _ansiStyles["default"].dim.close:
      case _ansiStyles["default"].bold.close:
      case _ansiStyles["default"].reset.open:
      case _ansiStyles["default"].reset.close:
        return '</>';
      case _ansiStyles["default"].red.open:
        return '<red>';
      case _ansiStyles["default"].green.open:
        return '<green>';
      case _ansiStyles["default"].cyan.open:
        return '<cyan>';
      case _ansiStyles["default"].gray.open:
        return '<gray>';
      case _ansiStyles["default"].white.open:
        return '<white>';
      case _ansiStyles["default"].yellow.open:
        return '<yellow>';
      case _ansiStyles["default"].bgRed.open:
        return '<bgRed>';
      case _ansiStyles["default"].bgGreen.open:
        return '<bgGreen>';
      case _ansiStyles["default"].bgYellow.open:
        return '<bgYellow>';
      case _ansiStyles["default"].inverse.open:
        return '<inverse>';
      case _ansiStyles["default"].dim.open:
        return '<dim>';
      case _ansiStyles["default"].bold.open:
        return '<bold>';
      default:
        return '';
    }
  });
};
var test = function test(val) {
  return typeof val === 'string' && !!val.match((0, _ansiRegex["default"])());
};
exports.test = test;
var serialize = function serialize(val, config, indentation, depth, refs, printer) {
  return printer(toHumanReadableAnsi(val), config, indentation, depth, refs);
};
exports.serialize = serialize;
var plugin = {
  serialize: serialize,
  test: test
};
var _default = plugin;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRlc3QiLCJzZXJpYWxpemUiLCJfYW5zaVJlZ2V4IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfYW5zaVN0eWxlcyIsIm9iaiIsIl9fZXNNb2R1bGUiLCJ0b0h1bWFuUmVhZGFibGVBbnNpIiwidGV4dCIsInJlcGxhY2UiLCJtYXRjaCIsInJlZCIsImNsb3NlIiwiZ3JlZW4iLCJjeWFuIiwiZ3JheSIsIndoaXRlIiwieWVsbG93IiwiYmdSZWQiLCJiZ0dyZWVuIiwiYmdZZWxsb3ciLCJpbnZlcnNlIiwiZGltIiwiYm9sZCIsInJlc2V0Iiwib3BlbiIsInZhbCIsImNvbmZpZyIsImluZGVudGF0aW9uIiwiZGVwdGgiLCJyZWZzIiwicHJpbnRlciIsInBsdWdpbiIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsiQ29udmVydEFuc2kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMudGVzdCA9IGV4cG9ydHMuc2VyaWFsaXplID0gZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX2Fuc2lSZWdleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgnYW5zaS1yZWdleCcpKTtcblxudmFyIF9hbnNpU3R5bGVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCdhbnNpLXN0eWxlcycpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtkZWZhdWx0OiBvYmp9O1xufVxuXG4vKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5jb25zdCB0b0h1bWFuUmVhZGFibGVBbnNpID0gdGV4dCA9PlxuICB0ZXh0LnJlcGxhY2UoKDAsIF9hbnNpUmVnZXguZGVmYXVsdCkoKSwgbWF0Y2ggPT4ge1xuICAgIHN3aXRjaCAobWF0Y2gpIHtcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5yZWQuY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuZ3JlZW4uY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuY3lhbi5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5ncmF5LmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LndoaXRlLmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LnllbGxvdy5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5iZ1JlZC5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5iZ0dyZWVuLmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmJnWWVsbG93LmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmludmVyc2UuY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuZGltLmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmJvbGQuY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQucmVzZXQub3BlbjpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5yZXNldC5jbG9zZTpcbiAgICAgICAgcmV0dXJuICc8Lz4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQucmVkLm9wZW46XG4gICAgICAgIHJldHVybiAnPHJlZD4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuZ3JlZW4ub3BlbjpcbiAgICAgICAgcmV0dXJuICc8Z3JlZW4+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmN5YW4ub3BlbjpcbiAgICAgICAgcmV0dXJuICc8Y3lhbj4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuZ3JheS5vcGVuOlxuICAgICAgICByZXR1cm4gJzxncmF5Pic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC53aGl0ZS5vcGVuOlxuICAgICAgICByZXR1cm4gJzx3aGl0ZT4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQueWVsbG93Lm9wZW46XG4gICAgICAgIHJldHVybiAnPHllbGxvdz4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuYmdSZWQub3BlbjpcbiAgICAgICAgcmV0dXJuICc8YmdSZWQ+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmJnR3JlZW4ub3BlbjpcbiAgICAgICAgcmV0dXJuICc8YmdHcmVlbj4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuYmdZZWxsb3cub3BlbjpcbiAgICAgICAgcmV0dXJuICc8YmdZZWxsb3c+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmludmVyc2Uub3BlbjpcbiAgICAgICAgcmV0dXJuICc8aW52ZXJzZT4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuZGltLm9wZW46XG4gICAgICAgIHJldHVybiAnPGRpbT4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuYm9sZC5vcGVuOlxuICAgICAgICByZXR1cm4gJzxib2xkPic7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH0pO1xuXG5jb25zdCB0ZXN0ID0gdmFsID0+XG4gIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnICYmICEhdmFsLm1hdGNoKCgwLCBfYW5zaVJlZ2V4LmRlZmF1bHQpKCkpO1xuXG5leHBvcnRzLnRlc3QgPSB0ZXN0O1xuXG5jb25zdCBzZXJpYWxpemUgPSAodmFsLCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcywgcHJpbnRlcikgPT5cbiAgcHJpbnRlcih0b0h1bWFuUmVhZGFibGVBbnNpKHZhbCksIGNvbmZpZywgaW5kZW50YXRpb24sIGRlcHRoLCByZWZzKTtcblxuZXhwb3J0cy5zZXJpYWxpemUgPSBzZXJpYWxpemU7XG5jb25zdCBwbHVnaW4gPSB7XG4gIHNlcmlhbGl6ZSxcbiAgdGVzdFxufTtcbnZhciBfZGVmYXVsdCA9IHBsdWdpbjtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaQSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUMzQ0MsS0FBSyxFQUFFO0FBQ1QsQ0FBQyxDQUFDO0FBQ0ZELE9BQU8sQ0FBQ0UsSUFBSSxHQUFHRixPQUFPLENBQUNHLFNBQVMsR0FBR0gsT0FBTyxXQUFRLEdBQUcsS0FBSyxDQUFDO0FBRTNELElBQUlJLFVBQVUsR0FBR0Msc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUU5RCxJQUFJQyxXQUFXLEdBQUdGLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFFaEUsU0FBU0Qsc0JBQXNCQSxDQUFDRyxHQUFHLEVBQUU7RUFDbkMsT0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVUsR0FBR0QsR0FBRyxHQUFHO0lBQUMsV0FBU0E7RUFBRyxDQUFDO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1FLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBbUJBLENBQUdDLElBQUk7RUFBQSxPQUM5QkEsSUFBSSxDQUFDQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUVSLFVBQVUsV0FBUSxFQUFFLENBQUMsRUFBRSxVQUFBUyxLQUFLLEVBQUk7SUFDL0MsUUFBUUEsS0FBSztNQUNYLEtBQUtOLFdBQVcsV0FBUSxDQUFDTyxHQUFHLENBQUNDLEtBQUs7TUFDbEMsS0FBS1IsV0FBVyxXQUFRLENBQUNTLEtBQUssQ0FBQ0QsS0FBSztNQUNwQyxLQUFLUixXQUFXLFdBQVEsQ0FBQ1UsSUFBSSxDQUFDRixLQUFLO01BQ25DLEtBQUtSLFdBQVcsV0FBUSxDQUFDVyxJQUFJLENBQUNILEtBQUs7TUFDbkMsS0FBS1IsV0FBVyxXQUFRLENBQUNZLEtBQUssQ0FBQ0osS0FBSztNQUNwQyxLQUFLUixXQUFXLFdBQVEsQ0FBQ2EsTUFBTSxDQUFDTCxLQUFLO01BQ3JDLEtBQUtSLFdBQVcsV0FBUSxDQUFDYyxLQUFLLENBQUNOLEtBQUs7TUFDcEMsS0FBS1IsV0FBVyxXQUFRLENBQUNlLE9BQU8sQ0FBQ1AsS0FBSztNQUN0QyxLQUFLUixXQUFXLFdBQVEsQ0FBQ2dCLFFBQVEsQ0FBQ1IsS0FBSztNQUN2QyxLQUFLUixXQUFXLFdBQVEsQ0FBQ2lCLE9BQU8sQ0FBQ1QsS0FBSztNQUN0QyxLQUFLUixXQUFXLFdBQVEsQ0FBQ2tCLEdBQUcsQ0FBQ1YsS0FBSztNQUNsQyxLQUFLUixXQUFXLFdBQVEsQ0FBQ21CLElBQUksQ0FBQ1gsS0FBSztNQUNuQyxLQUFLUixXQUFXLFdBQVEsQ0FBQ29CLEtBQUssQ0FBQ0MsSUFBSTtNQUNuQyxLQUFLckIsV0FBVyxXQUFRLENBQUNvQixLQUFLLENBQUNaLEtBQUs7UUFDbEMsT0FBTyxLQUFLO01BRWQsS0FBS1IsV0FBVyxXQUFRLENBQUNPLEdBQUcsQ0FBQ2MsSUFBSTtRQUMvQixPQUFPLE9BQU87TUFFaEIsS0FBS3JCLFdBQVcsV0FBUSxDQUFDUyxLQUFLLENBQUNZLElBQUk7UUFDakMsT0FBTyxTQUFTO01BRWxCLEtBQUtyQixXQUFXLFdBQVEsQ0FBQ1UsSUFBSSxDQUFDVyxJQUFJO1FBQ2hDLE9BQU8sUUFBUTtNQUVqQixLQUFLckIsV0FBVyxXQUFRLENBQUNXLElBQUksQ0FBQ1UsSUFBSTtRQUNoQyxPQUFPLFFBQVE7TUFFakIsS0FBS3JCLFdBQVcsV0FBUSxDQUFDWSxLQUFLLENBQUNTLElBQUk7UUFDakMsT0FBTyxTQUFTO01BRWxCLEtBQUtyQixXQUFXLFdBQVEsQ0FBQ2EsTUFBTSxDQUFDUSxJQUFJO1FBQ2xDLE9BQU8sVUFBVTtNQUVuQixLQUFLckIsV0FBVyxXQUFRLENBQUNjLEtBQUssQ0FBQ08sSUFBSTtRQUNqQyxPQUFPLFNBQVM7TUFFbEIsS0FBS3JCLFdBQVcsV0FBUSxDQUFDZSxPQUFPLENBQUNNLElBQUk7UUFDbkMsT0FBTyxXQUFXO01BRXBCLEtBQUtyQixXQUFXLFdBQVEsQ0FBQ2dCLFFBQVEsQ0FBQ0ssSUFBSTtRQUNwQyxPQUFPLFlBQVk7TUFFckIsS0FBS3JCLFdBQVcsV0FBUSxDQUFDaUIsT0FBTyxDQUFDSSxJQUFJO1FBQ25DLE9BQU8sV0FBVztNQUVwQixLQUFLckIsV0FBVyxXQUFRLENBQUNrQixHQUFHLENBQUNHLElBQUk7UUFDL0IsT0FBTyxPQUFPO01BRWhCLEtBQUtyQixXQUFXLFdBQVEsQ0FBQ21CLElBQUksQ0FBQ0UsSUFBSTtRQUNoQyxPQUFPLFFBQVE7TUFFakI7UUFDRSxPQUFPLEVBQUU7SUFDYjtFQUNGLENBQUMsQ0FBQztBQUFBO0FBRUosSUFBTTFCLElBQUksR0FBRyxTQUFQQSxJQUFJQSxDQUFHMkIsR0FBRztFQUFBLE9BQ2QsT0FBT0EsR0FBRyxLQUFLLFFBQVEsSUFBSSxDQUFDLENBQUNBLEdBQUcsQ0FBQ2hCLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRVQsVUFBVSxXQUFRLEVBQUUsQ0FBQyxDQUFDO0FBQUE7QUFFbkVKLE9BQU8sQ0FBQ0UsSUFBSSxHQUFHQSxJQUFJO0FBRW5CLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFTQSxDQUFJMEIsR0FBRyxFQUFFQyxNQUFNLEVBQUVDLFdBQVcsRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLE9BQU87RUFBQSxPQUMvREEsT0FBTyxDQUFDeEIsbUJBQW1CLENBQUNtQixHQUFHLENBQUMsRUFBRUMsTUFBTSxFQUFFQyxXQUFXLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxDQUFDO0FBQUE7QUFFckVqQyxPQUFPLENBQUNHLFNBQVMsR0FBR0EsU0FBUztBQUM3QixJQUFNZ0MsTUFBTSxHQUFHO0VBQ2JoQyxTQUFTLEVBQVRBLFNBQVM7RUFDVEQsSUFBSSxFQUFKQTtBQUNGLENBQUM7QUFDRCxJQUFJa0MsUUFBUSxHQUFHRCxNQUFNO0FBQ3JCbkMsT0FBTyxXQUFRLEdBQUdvQyxRQUFRIiwiaWdub3JlTGlzdCI6W119