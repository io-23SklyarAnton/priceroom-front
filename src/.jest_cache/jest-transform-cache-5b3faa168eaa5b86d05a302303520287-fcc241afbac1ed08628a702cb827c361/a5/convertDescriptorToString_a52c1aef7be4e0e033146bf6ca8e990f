1003244ad87b55dab858b119ce3b425e
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = convertDescriptorToString;

/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/* eslint-disable local/ban-types-eventually */
// See: https://github.com/facebook/jest/pull/5154
function convertDescriptorToString(descriptor) {
  if (typeof descriptor === 'string' || typeof descriptor === 'number' || descriptor === undefined) {
    return descriptor;
  }
  if (typeof descriptor !== 'function') {
    throw new Error('describe expects a class, function, number, or string.');
  }
  if (descriptor.name !== undefined) {
    return descriptor.name;
  } // Fallback for old browsers, pardon Flow

  var stringified = descriptor.toString();
  var typeDescriptorMatch = stringified.match(/class|function/);
  var indexOfNameSpace =
  // @ts-expect-error: typeDescriptorMatch exists
  typeDescriptorMatch.index + typeDescriptorMatch[0].length;
  var indexOfNameAfterSpace = stringified.search(/\(|\{/);
  var name = stringified.substring(indexOfNameSpace, indexOfNameAfterSpace);
  return name.trim();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNvbnZlcnREZXNjcmlwdG9yVG9TdHJpbmciLCJkZXNjcmlwdG9yIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJuYW1lIiwic3RyaW5naWZpZWQiLCJ0b1N0cmluZyIsInR5cGVEZXNjcmlwdG9yTWF0Y2giLCJtYXRjaCIsImluZGV4T2ZOYW1lU3BhY2UiLCJpbmRleCIsImxlbmd0aCIsImluZGV4T2ZOYW1lQWZ0ZXJTcGFjZSIsInNlYXJjaCIsInN1YnN0cmluZyIsInRyaW0iXSwic291cmNlcyI6WyJjb252ZXJ0RGVzY3JpcHRvclRvU3RyaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjb252ZXJ0RGVzY3JpcHRvclRvU3RyaW5nO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qIGVzbGludC1kaXNhYmxlIGxvY2FsL2Jhbi10eXBlcy1ldmVudHVhbGx5ICovXG4vLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9qZXN0L3B1bGwvNTE1NFxuZnVuY3Rpb24gY29udmVydERlc2NyaXB0b3JUb1N0cmluZyhkZXNjcmlwdG9yKSB7XG4gIGlmIChcbiAgICB0eXBlb2YgZGVzY3JpcHRvciA9PT0gJ3N0cmluZycgfHxcbiAgICB0eXBlb2YgZGVzY3JpcHRvciA9PT0gJ251bWJlcicgfHxcbiAgICBkZXNjcmlwdG9yID09PSB1bmRlZmluZWRcbiAgKSB7XG4gICAgcmV0dXJuIGRlc2NyaXB0b3I7XG4gIH1cblxuICBpZiAodHlwZW9mIGRlc2NyaXB0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2Rlc2NyaWJlIGV4cGVjdHMgYSBjbGFzcywgZnVuY3Rpb24sIG51bWJlciwgb3Igc3RyaW5nLicpO1xuICB9XG5cbiAgaWYgKGRlc2NyaXB0b3IubmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIGRlc2NyaXB0b3IubmFtZTtcbiAgfSAvLyBGYWxsYmFjayBmb3Igb2xkIGJyb3dzZXJzLCBwYXJkb24gRmxvd1xuXG4gIGNvbnN0IHN0cmluZ2lmaWVkID0gZGVzY3JpcHRvci50b1N0cmluZygpO1xuICBjb25zdCB0eXBlRGVzY3JpcHRvck1hdGNoID0gc3RyaW5naWZpZWQubWF0Y2goL2NsYXNzfGZ1bmN0aW9uLyk7XG4gIGNvbnN0IGluZGV4T2ZOYW1lU3BhY2UgPSAvLyBAdHMtZXhwZWN0LWVycm9yOiB0eXBlRGVzY3JpcHRvck1hdGNoIGV4aXN0c1xuICAgIHR5cGVEZXNjcmlwdG9yTWF0Y2guaW5kZXggKyB0eXBlRGVzY3JpcHRvck1hdGNoWzBdLmxlbmd0aDtcbiAgY29uc3QgaW5kZXhPZk5hbWVBZnRlclNwYWNlID0gc3RyaW5naWZpZWQuc2VhcmNoKC9cXCh8XFx7Lyk7XG4gIGNvbnN0IG5hbWUgPSBzdHJpbmdpZmllZC5zdWJzdHJpbmcoaW5kZXhPZk5hbWVTcGFjZSwgaW5kZXhPZk5hbWVBZnRlclNwYWNlKTtcbiAgcmV0dXJuIG5hbWUudHJpbSgpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaQSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUMzQ0MsS0FBSyxFQUFFO0FBQ1QsQ0FBQyxDQUFDO0FBQ0ZELE9BQU8sV0FBUSxHQUFHRSx5QkFBeUI7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBU0EseUJBQXlCQSxDQUFDQyxVQUFVLEVBQUU7RUFDN0MsSUFDRSxPQUFPQSxVQUFVLEtBQUssUUFBUSxJQUM5QixPQUFPQSxVQUFVLEtBQUssUUFBUSxJQUM5QkEsVUFBVSxLQUFLQyxTQUFTLEVBQ3hCO0lBQ0EsT0FBT0QsVUFBVTtFQUNuQjtFQUVBLElBQUksT0FBT0EsVUFBVSxLQUFLLFVBQVUsRUFBRTtJQUNwQyxNQUFNLElBQUlFLEtBQUssQ0FBQyx3REFBd0QsQ0FBQztFQUMzRTtFQUVBLElBQUlGLFVBQVUsQ0FBQ0csSUFBSSxLQUFLRixTQUFTLEVBQUU7SUFDakMsT0FBT0QsVUFBVSxDQUFDRyxJQUFJO0VBQ3hCLENBQUMsQ0FBQzs7RUFFRixJQUFNQyxXQUFXLEdBQUdKLFVBQVUsQ0FBQ0ssUUFBUSxDQUFDLENBQUM7RUFDekMsSUFBTUMsbUJBQW1CLEdBQUdGLFdBQVcsQ0FBQ0csS0FBSyxDQUFDLGdCQUFnQixDQUFDO0VBQy9ELElBQU1DLGdCQUFnQjtFQUFHO0VBQ3ZCRixtQkFBbUIsQ0FBQ0csS0FBSyxHQUFHSCxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQ0ksTUFBTTtFQUMzRCxJQUFNQyxxQkFBcUIsR0FBR1AsV0FBVyxDQUFDUSxNQUFNLENBQUMsT0FBTyxDQUFDO0VBQ3pELElBQU1ULElBQUksR0FBR0MsV0FBVyxDQUFDUyxTQUFTLENBQUNMLGdCQUFnQixFQUFFRyxxQkFBcUIsQ0FBQztFQUMzRSxPQUFPUixJQUFJLENBQUNXLElBQUksQ0FBQyxDQUFDO0FBQ3BCIiwiaWdub3JlTGlzdCI6W119