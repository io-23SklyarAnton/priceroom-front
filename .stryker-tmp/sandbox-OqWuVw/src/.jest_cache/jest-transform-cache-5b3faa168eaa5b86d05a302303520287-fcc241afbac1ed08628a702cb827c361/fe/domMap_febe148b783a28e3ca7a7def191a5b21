db39bfd91087baa4812a10defe85912a
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _iterationDecorator = _interopRequireDefault(require("./util/iterationDecorator"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F() {};
      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e2) {
          throw _e2;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function s() {
      it = it.call(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e3) {
      didErr = true;
      err = _e3;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
var dom = [['a', {
  reserved: false
}], ['abbr', {
  reserved: false
}], ['acronym', {
  reserved: false
}], ['address', {
  reserved: false
}], ['applet', {
  reserved: false
}], ['area', {
  reserved: false
}], ['article', {
  reserved: false
}], ['aside', {
  reserved: false
}], ['audio', {
  reserved: false
}], ['b', {
  reserved: false
}], ['base', {
  reserved: true
}], ['bdi', {
  reserved: false
}], ['bdo', {
  reserved: false
}], ['big', {
  reserved: false
}], ['blink', {
  reserved: false
}], ['blockquote', {
  reserved: false
}], ['body', {
  reserved: false
}], ['br', {
  reserved: false
}], ['button', {
  reserved: false
}], ['canvas', {
  reserved: false
}], ['caption', {
  reserved: false
}], ['center', {
  reserved: false
}], ['cite', {
  reserved: false
}], ['code', {
  reserved: false
}], ['col', {
  reserved: true
}], ['colgroup', {
  reserved: true
}], ['content', {
  reserved: false
}], ['data', {
  reserved: false
}], ['datalist', {
  reserved: false
}], ['dd', {
  reserved: false
}], ['del', {
  reserved: false
}], ['details', {
  reserved: false
}], ['dfn', {
  reserved: false
}], ['dialog', {
  reserved: false
}], ['dir', {
  reserved: false
}], ['div', {
  reserved: false
}], ['dl', {
  reserved: false
}], ['dt', {
  reserved: false
}], ['em', {
  reserved: false
}], ['embed', {
  reserved: false
}], ['fieldset', {
  reserved: false
}], ['figcaption', {
  reserved: false
}], ['figure', {
  reserved: false
}], ['font', {
  reserved: false
}], ['footer', {
  reserved: false
}], ['form', {
  reserved: false
}], ['frame', {
  reserved: false
}], ['frameset', {
  reserved: false
}], ['h1', {
  reserved: false
}], ['h2', {
  reserved: false
}], ['h3', {
  reserved: false
}], ['h4', {
  reserved: false
}], ['h5', {
  reserved: false
}], ['h6', {
  reserved: false
}], ['head', {
  reserved: true
}], ['header', {
  reserved: false
}], ['hgroup', {
  reserved: false
}], ['hr', {
  reserved: false
}], ['html', {
  reserved: true
}], ['i', {
  reserved: false
}], ['iframe', {
  reserved: false
}], ['img', {
  reserved: false
}], ['input', {
  reserved: false
}], ['ins', {
  reserved: false
}], ['kbd', {
  reserved: false
}], ['keygen', {
  reserved: false
}], ['label', {
  reserved: false
}], ['legend', {
  reserved: false
}], ['li', {
  reserved: false
}], ['link', {
  reserved: true
}], ['main', {
  reserved: false
}], ['map', {
  reserved: false
}], ['mark', {
  reserved: false
}], ['marquee', {
  reserved: false
}], ['menu', {
  reserved: false
}], ['menuitem', {
  reserved: false
}], ['meta', {
  reserved: true
}], ['meter', {
  reserved: false
}], ['nav', {
  reserved: false
}], ['noembed', {
  reserved: true
}], ['noscript', {
  reserved: true
}], ['object', {
  reserved: false
}], ['ol', {
  reserved: false
}], ['optgroup', {
  reserved: false
}], ['option', {
  reserved: false
}], ['output', {
  reserved: false
}], ['p', {
  reserved: false
}], ['param', {
  reserved: true
}], ['picture', {
  reserved: true
}], ['pre', {
  reserved: false
}], ['progress', {
  reserved: false
}], ['q', {
  reserved: false
}], ['rp', {
  reserved: false
}], ['rt', {
  reserved: false
}], ['rtc', {
  reserved: false
}], ['ruby', {
  reserved: false
}], ['s', {
  reserved: false
}], ['samp', {
  reserved: false
}], ['script', {
  reserved: true
}], ['section', {
  reserved: false
}], ['select', {
  reserved: false
}], ['small', {
  reserved: false
}], ['source', {
  reserved: true
}], ['spacer', {
  reserved: false
}], ['span', {
  reserved: false
}], ['strike', {
  reserved: false
}], ['strong', {
  reserved: false
}], ['style', {
  reserved: true
}], ['sub', {
  reserved: false
}], ['summary', {
  reserved: false
}], ['sup', {
  reserved: false
}], ['table', {
  reserved: false
}], ['tbody', {
  reserved: false
}], ['td', {
  reserved: false
}], ['textarea', {
  reserved: false
}], ['tfoot', {
  reserved: false
}], ['th', {
  reserved: false
}], ['thead', {
  reserved: false
}], ['time', {
  reserved: false
}], ['title', {
  reserved: true
}], ['tr', {
  reserved: false
}], ['track', {
  reserved: true
}], ['tt', {
  reserved: false
}], ['u', {
  reserved: false
}], ['ul', {
  reserved: false
}], ['var', {
  reserved: false
}], ['video', {
  reserved: false
}], ['wbr', {
  reserved: false
}], ['xmp', {
  reserved: false
}]];
var domMap = {
  entries: function entries() {
    return dom;
  },
  forEach: function forEach(fn) {
    var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var _iterator = _createForOfIteratorHelper(dom),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _step$value = _slicedToArray(_step.value, 2),
          key = _step$value[0],
          values = _step$value[1];
        fn.call(thisArg, values, key, dom);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  },
  get: function get(key) {
    var item = dom.find(function (tuple) {
      return tuple[0] === key ? true : false;
    });
    return item && item[1];
  },
  has: function has(key) {
    return !!domMap.get(key);
  },
  keys: function keys() {
    return dom.map(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        key = _ref2[0];
      return key;
    });
  },
  values: function values() {
    return dom.map(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
        values = _ref4[1];
      return values;
    });
  }
};
var _default = (0, _iterationDecorator["default"])(domMap, domMap.entries());
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9pdGVyYXRpb25EZWNvcmF0b3IiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfc2xpY2VkVG9BcnJheSIsImFyciIsImkiLCJfYXJyYXlXaXRoSG9sZXMiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVSZXN0IiwiVHlwZUVycm9yIiwiX2kiLCJTeW1ib2wiLCJpdGVyYXRvciIsIl9hcnIiLCJfbiIsIl9kIiwiX3MiLCJfZSIsImNhbGwiLCJuZXh0IiwiZG9uZSIsInB1c2giLCJsZW5ndGgiLCJlcnIiLCJBcnJheSIsImlzQXJyYXkiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsIm8iLCJhbGxvd0FycmF5TGlrZSIsIml0IiwiRiIsInMiLCJuIiwiZSIsIl9lMiIsImYiLCJub3JtYWxDb21wbGV0aW9uIiwiZGlkRXJyIiwic3RlcCIsIl9lMyIsIm1pbkxlbiIsIl9hcnJheUxpa2VUb0FycmF5IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwibGVuIiwiYXJyMiIsImRvbSIsInJlc2VydmVkIiwiZG9tTWFwIiwiZW50cmllcyIsImZvckVhY2giLCJmbiIsInRoaXNBcmciLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJfaXRlcmF0b3IiLCJfc3RlcCIsIl9zdGVwJHZhbHVlIiwia2V5IiwidmFsdWVzIiwiZ2V0IiwiaXRlbSIsImZpbmQiLCJ0dXBsZSIsImhhcyIsImtleXMiLCJtYXAiLCJfcmVmIiwiX3JlZjIiLCJfcmVmMyIsIl9yZWY0IiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJkb21NYXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX2l0ZXJhdGlvbkRlY29yYXRvciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXRpbC9pdGVyYXRpb25EZWNvcmF0b3JcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTsgaWYgKF9pID09IG51bGwpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfcywgX2U7IHRyeSB7IGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5mdW5jdGlvbiBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihvLCBhbGxvd0FycmF5TGlrZSkgeyB2YXIgaXQgPSB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXSB8fCBvW1wiQEBpdGVyYXRvclwiXTsgaWYgKCFpdCkgeyBpZiAoQXJyYXkuaXNBcnJheShvKSB8fCAoaXQgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobykpIHx8IGFsbG93QXJyYXlMaWtlICYmIG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSB7IGlmIChpdCkgbyA9IGl0OyB2YXIgaSA9IDA7IHZhciBGID0gZnVuY3Rpb24gRigpIHt9OyByZXR1cm4geyBzOiBGLCBuOiBmdW5jdGlvbiBuKCkgeyBpZiAoaSA+PSBvLmxlbmd0aCkgcmV0dXJuIHsgZG9uZTogdHJ1ZSB9OyByZXR1cm4geyBkb25lOiBmYWxzZSwgdmFsdWU6IG9baSsrXSB9OyB9LCBlOiBmdW5jdGlvbiBlKF9lMikgeyB0aHJvdyBfZTI7IH0sIGY6IEYgfTsgfSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH0gdmFyIG5vcm1hbENvbXBsZXRpb24gPSB0cnVlLCBkaWRFcnIgPSBmYWxzZSwgZXJyOyByZXR1cm4geyBzOiBmdW5jdGlvbiBzKCkgeyBpdCA9IGl0LmNhbGwobyk7IH0sIG46IGZ1bmN0aW9uIG4oKSB7IHZhciBzdGVwID0gaXQubmV4dCgpOyBub3JtYWxDb21wbGV0aW9uID0gc3RlcC5kb25lOyByZXR1cm4gc3RlcDsgfSwgZTogZnVuY3Rpb24gZShfZTMpIHsgZGlkRXJyID0gdHJ1ZTsgZXJyID0gX2UzOyB9LCBmOiBmdW5jdGlvbiBmKCkgeyB0cnkgeyBpZiAoIW5vcm1hbENvbXBsZXRpb24gJiYgaXQucmV0dXJuICE9IG51bGwpIGl0LnJldHVybigpOyB9IGZpbmFsbHkgeyBpZiAoZGlkRXJyKSB0aHJvdyBlcnI7IH0gfSB9OyB9XG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxudmFyIGRvbSA9IFtbJ2EnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnYWJicicsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydhY3JvbnltJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2FkZHJlc3MnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnYXBwbGV0Jywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2FyZWEnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnYXJ0aWNsZScsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydhc2lkZScsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydhdWRpbycsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydiJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2Jhc2UnLCB7XG4gIHJlc2VydmVkOiB0cnVlXG59XSwgWydiZGknLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnYmRvJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2JpZycsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydibGluaycsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydibG9ja3F1b3RlJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2JvZHknLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnYnInLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnYnV0dG9uJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2NhbnZhcycsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydjYXB0aW9uJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2NlbnRlcicsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydjaXRlJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2NvZGUnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnY29sJywge1xuICByZXNlcnZlZDogdHJ1ZVxufV0sIFsnY29sZ3JvdXAnLCB7XG4gIHJlc2VydmVkOiB0cnVlXG59XSwgWydjb250ZW50Jywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2RhdGEnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnZGF0YWxpc3QnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnZGQnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnZGVsJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2RldGFpbHMnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnZGZuJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2RpYWxvZycsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydkaXInLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnZGl2Jywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2RsJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2R0Jywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2VtJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2VtYmVkJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2ZpZWxkc2V0Jywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2ZpZ2NhcHRpb24nLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnZmlndXJlJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2ZvbnQnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnZm9vdGVyJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2Zvcm0nLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnZnJhbWUnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnZnJhbWVzZXQnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnaDEnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnaDInLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnaDMnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnaDQnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnaDUnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnaDYnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnaGVhZCcsIHtcbiAgcmVzZXJ2ZWQ6IHRydWVcbn1dLCBbJ2hlYWRlcicsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydoZ3JvdXAnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnaHInLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnaHRtbCcsIHtcbiAgcmVzZXJ2ZWQ6IHRydWVcbn1dLCBbJ2knLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnaWZyYW1lJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2ltZycsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydpbnB1dCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydpbnMnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsna2JkJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ2tleWdlbicsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydsYWJlbCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydsZWdlbmQnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnbGknLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnbGluaycsIHtcbiAgcmVzZXJ2ZWQ6IHRydWVcbn1dLCBbJ21haW4nLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnbWFwJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ21hcmsnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnbWFycXVlZScsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydtZW51Jywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ21lbnVpdGVtJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ21ldGEnLCB7XG4gIHJlc2VydmVkOiB0cnVlXG59XSwgWydtZXRlcicsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyduYXYnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnbm9lbWJlZCcsIHtcbiAgcmVzZXJ2ZWQ6IHRydWVcbn1dLCBbJ25vc2NyaXB0Jywge1xuICByZXNlcnZlZDogdHJ1ZVxufV0sIFsnb2JqZWN0Jywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ29sJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ29wdGdyb3VwJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ29wdGlvbicsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydvdXRwdXQnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsncCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydwYXJhbScsIHtcbiAgcmVzZXJ2ZWQ6IHRydWVcbn1dLCBbJ3BpY3R1cmUnLCB7XG4gIHJlc2VydmVkOiB0cnVlXG59XSwgWydwcmUnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsncHJvZ3Jlc3MnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsncScsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydycCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydydCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydydGMnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsncnVieScsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydzJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ3NhbXAnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnc2NyaXB0Jywge1xuICByZXNlcnZlZDogdHJ1ZVxufV0sIFsnc2VjdGlvbicsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydzZWxlY3QnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnc21hbGwnLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnc291cmNlJywge1xuICByZXNlcnZlZDogdHJ1ZVxufV0sIFsnc3BhY2VyJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ3NwYW4nLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsnc3RyaWtlJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ3N0cm9uZycsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydzdHlsZScsIHtcbiAgcmVzZXJ2ZWQ6IHRydWVcbn1dLCBbJ3N1YicsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWydzdW1tYXJ5Jywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ3N1cCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd0YWJsZScsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd0Ym9keScsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd0ZCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd0ZXh0YXJlYScsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd0Zm9vdCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd0aCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd0aGVhZCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd0aW1lJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ3RpdGxlJywge1xuICByZXNlcnZlZDogdHJ1ZVxufV0sIFsndHInLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsndHJhY2snLCB7XG4gIHJlc2VydmVkOiB0cnVlXG59XSwgWyd0dCcsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd1Jywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ3VsJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dLCBbJ3ZhcicsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd2aWRlbycsIHtcbiAgcmVzZXJ2ZWQ6IGZhbHNlXG59XSwgWyd3YnInLCB7XG4gIHJlc2VydmVkOiBmYWxzZVxufV0sIFsneG1wJywge1xuICByZXNlcnZlZDogZmFsc2Vcbn1dXTtcbnZhciBkb21NYXAgPSB7XG4gIGVudHJpZXM6IGZ1bmN0aW9uIGVudHJpZXMoKSB7XG4gICAgcmV0dXJuIGRvbTtcbiAgfSxcbiAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChmbikge1xuICAgIHZhciB0aGlzQXJnID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBudWxsO1xuICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihkb20pLFxuICAgICAgX3N0ZXA7XG4gICAgdHJ5IHtcbiAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7XG4gICAgICAgIHZhciBfc3RlcCR2YWx1ZSA9IF9zbGljZWRUb0FycmF5KF9zdGVwLnZhbHVlLCAyKSxcbiAgICAgICAgICBrZXkgPSBfc3RlcCR2YWx1ZVswXSxcbiAgICAgICAgICB2YWx1ZXMgPSBfc3RlcCR2YWx1ZVsxXTtcbiAgICAgICAgZm4uY2FsbCh0aGlzQXJnLCB2YWx1ZXMsIGtleSwgZG9tKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIF9pdGVyYXRvci5lKGVycik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIF9pdGVyYXRvci5mKCk7XG4gICAgfVxuICB9LFxuICBnZXQ6IGZ1bmN0aW9uIGdldChrZXkpIHtcbiAgICB2YXIgaXRlbSA9IGRvbS5maW5kKGZ1bmN0aW9uICh0dXBsZSkge1xuICAgICAgcmV0dXJuIHR1cGxlWzBdID09PSBrZXkgPyB0cnVlIDogZmFsc2U7XG4gICAgfSk7XG4gICAgcmV0dXJuIGl0ZW0gJiYgaXRlbVsxXTtcbiAgfSxcbiAgaGFzOiBmdW5jdGlvbiBoYXMoa2V5KSB7XG4gICAgcmV0dXJuICEhZG9tTWFwLmdldChrZXkpO1xuICB9LFxuICBrZXlzOiBmdW5jdGlvbiBrZXlzKCkge1xuICAgIHJldHVybiBkb20ubWFwKGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAxKSxcbiAgICAgICAga2V5ID0gX3JlZjJbMF07XG4gICAgICByZXR1cm4ga2V5O1xuICAgIH0pO1xuICB9LFxuICB2YWx1ZXM6IGZ1bmN0aW9uIHZhbHVlcygpIHtcbiAgICByZXR1cm4gZG9tLm1hcChmdW5jdGlvbiAoX3JlZjMpIHtcbiAgICAgIHZhciBfcmVmNCA9IF9zbGljZWRUb0FycmF5KF9yZWYzLCAyKSxcbiAgICAgICAgdmFsdWVzID0gX3JlZjRbMV07XG4gICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH0pO1xuICB9XG59O1xudmFyIF9kZWZhdWx0ID0gKDAsIF9pdGVyYXRpb25EZWNvcmF0b3IuZGVmYXVsdCkoZG9tTWFwLCBkb21NYXAuZW50cmllcygpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFDM0NDLEtBQUssRUFBRTtBQUNULENBQUMsQ0FBQztBQUNGRCxPQUFPLFdBQVEsR0FBRyxLQUFLLENBQUM7QUFDeEIsSUFBSUUsbUJBQW1CLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQztBQUN0RixTQUFTRCxzQkFBc0JBLENBQUNFLEdBQUcsRUFBRTtFQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxD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QUFDLENBQUMsR0FBR0QsR0FBRyxDQUFDQyxDQUFDLENBQUM7RUFBRTtFQUFFLE9BQU84QyxJQUFJO0FBQUU7QUFDdEwsSUFBSUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUU7RUFDZkMsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUU7RUFDWEEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUU7RUFDZEEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUU7RUFDZEEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUU7RUFDYkEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUU7RUFDWEEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUU7RUFDZEEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUU7RUFDWkEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUU7RUFDWkEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUU7RUFDUkEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUU7RUFDWEEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUU7RUFDVkEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUU7RUFDVkEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUU7RUFDVkEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUU7RUFDWkEsUUFBUSxFQUFFO0FBQ1osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUU7RUFDakJBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFO0VBQ1hBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFO0VBQ1RBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFO0VBQ2JBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFO0VBQ2JBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFO0VBQ2RBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFO0VBQ2JBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFO0VBQ1hBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFO0VBQ1hBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFO0VBQ1ZBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFO0VBQ2ZBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFO0VBQ2RBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFO0VBQ1hBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFO0VBQ2ZBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFO0VBQ1RBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFO0VBQ1ZBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFO0VBQ2RBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFO0VBQ1ZBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFO0VBQ2JBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFO0VBQ1ZBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFO0VBQ1ZBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFO0VBQ1RBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFO0VBQ1RBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFO0VBQ1RBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFO0VBQ1pBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFO0VBQ2ZBLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFO0VBQ2pCQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRTtFQUNmQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRTtFQUNSQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRTtFQUNWQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRTtFQUNWQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRTtFQUNWQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRTtFQUNWQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRTtFQUNkQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRTtFQUNmQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRTtFQUNWQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRTtFQUNkQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRTtFQUNmQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRTtFQUNmQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRTtFQUNSQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRTtFQUNkQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRTtFQUNWQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRTtFQUNmQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRTtFQUNSQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRTtFQUNWQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRTtFQUNSQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRTtFQUNkQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtFQUNiQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRTtFQUNWQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRTtFQUNkQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRTtFQUNWQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRTtFQUNmQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtFQUNYQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRTtFQUNUQSxRQUFRLEVBQUU7QUFDWixDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRTtFQUNaQSxRQUFRLEVBQUU7QUFDWixD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